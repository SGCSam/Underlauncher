<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Underlauncher">

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource Shared.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Shared.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource Shared.Static.Foreground}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily.determinationFont.Regular}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="8,0,8,0"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="header" Text="{TemplateBinding local:TextBoxExtensions.Header}" HorizontalAlignment="Center" Margin="0,0,0,5" Style="{StaticResource TextBlock.Content}"/>
                        <Border Grid.Row="1" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TextBox.Focus.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource Shared.Static.Background}"/>
                            <Setter Property="CaretBrush" Value="{StaticResource Shared.Static.Background}"/>
                        </Trigger>
                        <Trigger Property="local:TextBoxExtensions.Header" Value="">
                            <Setter TargetName="header" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="false"/>
                    <Condition Property="IsSelectionActive" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource Shared.Static.Determination}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>